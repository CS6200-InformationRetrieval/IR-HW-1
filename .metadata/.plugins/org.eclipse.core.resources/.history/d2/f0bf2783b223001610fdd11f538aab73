import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilder;
import org.elasticsearch.action.admin.indices.create.CreateIndexResponse;
import org.elasticsearch.client.Client;
import org.elasticsearch.client.transport.TransportClient;
import org.elasticsearch.common.settings.Settings;
import org.elasticsearch.common.transport.InetSocketTransportAddress;

public class XMLParser {
	static int docCount = 0;

	
	public static BufferedReader parseDoc(BufferedReader br) throws IOException
	{
		String line="";
		String docNo="";
		StringBuilder docText = new StringBuilder();
		
		while(!(line=br.readLine()).equals("</DOC>"))
		{
			if(line.startsWith("<DOCNO>"))
			{
				docNo = line.split(" ")[1].trim();
			}
			
			if(line.equals("<TEXT>"))
			{
				while(!(line = br.readLine()).equals("</TEXT>"))
				{
					docText.append(line+" ");
				}
;			}
			else
				continue;
		}
		
		System.out.println("DOCNO : "+docNo);
		System.out.println("DOCTEXT: "+docText.toString());
		
		putToIndex(docNo,docText.toString());
		
		
		return br;
	}
	
	public static void putToIndex(String docNo, String docText)
	{
		Settings settings = ImmutableSettings.settingsBuilder().put("cluster.name", "myClusterName").put("client.transport.sniff", true).build();
	    Client client = new TransportClient(settings).addTransportAddress(new InetSocketTransportAddress("localhost", 9200));
	    CreateIndexRequestBuilder createIndexRequestBuilder = client.admin().indices().prepareCreate("test1");
	    CreateIndexResponse response = createIndexRequestBuilder.execute().actionGet();
	    System.out.println(response.isAcknowledged());  
	}
	
	public static void parseXMLFile(File xmlfile) throws IOException
	{
		BufferedReader br = new BufferedReader(new FileReader(xmlfile));
		String line = "";
		
		while((line = br.readLine())!=null)
		{
			if(line.equals("<DOC>"))
			{
				docCount++;
				br = parseDoc(br);
			}
			else
				System.out.println("Invalid XML file");
		}
	
	}
	

	public static void main(String args[]) throws IOException
	{
		//iterate through the given file and parse each file
		
		String dataFolderName = "C:\\Users\\kaush_000\\Desktop\\IR\\AP89_DATA\\AP_DATA\\ap89_collection";
		File dataFolder = new File(dataFolderName);
		
		if(dataFolder.exists())
		{
			//parseXMLFile(new File("C:\\Users\\kaush_000\\Desktop\\IR\\AP89_DATA\\AP_DATA\\ap890101-kaushik"));
			for(File xmlfile : dataFolder.listFiles())
			{
				parseXMLFile(xmlfile);
			}
//			
			
			System.out.println("No of Doc's found: "+docCount);
			
		}
		else
			System.out.println("Given data folder : "+dataFolderName+" doesn't exist");
		//while parsing each file, put the docs in your index 
		
		
	}
}
