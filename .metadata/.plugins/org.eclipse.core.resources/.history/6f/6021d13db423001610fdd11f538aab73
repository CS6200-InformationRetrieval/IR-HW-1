import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.InetAddress;
import java.net.URI;
import java.net.URL;
import java.net.UnknownHostException;

import org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilder;
import org.elasticsearch.action.admin.indices.create.CreateIndexResponse;
import org.elasticsearch.client.Client;
import org.elasticsearch.client.transport.TransportClient;
import org.elasticsearch.common.settings.Settings;
import org.elasticsearch.common.transport.InetSocketTransportAddress;

public class XMLParser {
	static int docCount = 0;
	static Client client;
	static int docIndex = 0;

	
	public static BufferedReader parseDoc(BufferedReader br) throws IOException
	{
		String line="";
		String docNo="";
		StringBuilder docText = new StringBuilder();
		
		while(!(line=br.readLine()).equals("</DOC>"))
		{
			if(line.startsWith("<DOCNO>"))
			{
				docNo = line.split(" ")[1].trim();
				docIndex++;
			}
			
			if(line.equals("<TEXT>"))
			{
				while(!(line = br.readLine()).equals("</TEXT>"))
				{
					docText.append(line+" ");
				}
;			}
			else
				continue;
		}
		
		System.out.println("DOCNO : "+docNo);
		System.out.println("DOCTEXT: "+docText.toString());
		
		putToIndex(docNo,docText.toString(),docIndex);
		
		
		return br;
	}
	
	public static void putToIndex(String docNo, String docText,int docIndex) throws UnknownHostException
	{
		URL url = new URL("http://localhost:9200/ap_dataset/document/" + docIndex);
        HttpURLConnection connection = (HttpURLConnection)url.openConnection();
        connection.setRequestProperty("Accept", "application/json");
        connection.setRequestMethod("PUT");
        connection.setDoOutput(true);
        OutputStreamWriter osw = new OutputStreamWriter(connection.getOutputStream());
        osw.write(" { \"text\": \"" + contentbwText + "\"" + "," + "\"docno\": \"" + DocNo + "\" }");
        osw.flush();
        osw.close();
        connection.disconnect();
        System.err.println(connection.getResponseCode());
	}
	
	public static void parseXMLFile(File xmlfile) throws IOException
	{
		BufferedReader br = new BufferedReader(new FileReader(xmlfile));
		String line = "";
		
		while((line = br.readLine())!=null)
		{
			if(line.equals("<DOC>"))
			{
				docCount++;
				br = parseDoc(br);
			}
			else
				System.out.println("Invalid XML file");
		}
	
	}
	

	public static void main(String args[]) throws IOException
	{
		//iterate through the given file and parse each file
		
		String dataFolderName = "C:\\Users\\kaush_000\\Desktop\\IR\\AP89_DATA\\AP_DATA\\ap89_collection";
		File dataFolder = new File(dataFolderName);
		
		if(dataFolder.exists())
		{
			//parseXMLFile(new File("C:\\Users\\kaush_000\\Desktop\\IR\\AP89_DATA\\AP_DATA\\ap890101-kaushik"));
			for(File xmlfile : dataFolder.listFiles())
			{
				parseXMLFile(xmlfile);
			}
//			
			client.close();
			System.out.println("No of Doc's found: "+docCount);
			
		}
		else
			System.out.println("Given data folder : "+dataFolderName+" doesn't exist");
		//while parsing each file, put the docs in your index 
	}
}
